name: Docker Image Build Release

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 1'
  push:
    branches: [ "main" ]
  repository_dispatch:
    types: [yt-dlp-release]

env:
  owner: ${{ github.repository_owner }}
  repository: ${{ github.repository_owner }}/dasovbot
  registry: ghcr.io

jobs:
  check-yt-dlp-release:
    runs-on: ubuntu-latest
    outputs:
      should_build: ${{ steps.check.outputs.should_build }}
      yt_dlp_version: ${{ steps.check.outputs.yt_dlp_version }}
    steps:
      - name: Check yt-dlp latest release
        id: check
        run: |
          if ! latest_release=$(curl -sf "https://api.github.com/repos/yt-dlp/yt-dlp/releases/latest" | jq -r .tag_name); then
            echo "Error: Failed to fetch latest yt-dlp release"
            exit 1
          fi
          echo "yt_dlp_version=$latest_release" >> $GITHUB_OUTPUT
          
          previous_version=$(curl -sf "https://api.github.com/repos/${{ github.repository }}/releases/latest" | jq -r '.body' | grep -o 'yt-dlp version: [^ ]*' | cut -d' ' -f3 || echo "none")
          
          echo "Latest yt-dlp version: $latest_release"
          echo "Previous version: $previous_version"
          
          is_new_version=false
          if [[ "$latest_release" != "$previous_version" ]]; then
            is_new_version=true
            echo "New yt-dlp version detected: $latest_release (previous: $previous_version)"
          fi
          
          if [[ "$is_new_version" == "true" ]] || \
             [[ "${{ github.event_name }}" == "workflow_dispatch" ]] || \
             [[ "${{ github.event_name }}" == "push" ]] || \
             [[ "${{ github.event_name }}" == "schedule" ]]; then
            echo "should_build=true" >> $GITHUB_OUTPUT
            echo "Building new Docker image with yt-dlp version: $latest_release"
          else
            echo "should_build=false" >> $GITHUB_OUTPUT
            echo "No new yt-dlp version. Current: $latest_release"
          fi

  build:
    needs: check-yt-dlp-release
    if: needs.check-yt-dlp-release.outputs.should_build == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ env.owner }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.registry }}
          username: ${{ env.owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Current date
        id: date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.repository }}:${{ steps.date.outputs.date }},
            ${{ env.repository }}:latest,
            ${{ env.registry }}/${{ env.repository }}:${{ steps.date.outputs.date }},
            ${{ env.registry }}/${{ env.repository }}:latest

      - name: Release
        uses: softprops/action-gh-release@v0.1.14
        with:
          tag_name: ${{ steps.date.outputs.date }}
          generate_release_notes: true
          body: |
            Build date: ${{ steps.date.outputs.date }}
            yt-dlp version: ${{ needs.check-yt-dlp-release.outputs.yt_dlp_version }}
